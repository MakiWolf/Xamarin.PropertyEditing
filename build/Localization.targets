<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="UpdateTranslations" ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <Import Project="corebuild.props" />

  <PropertyGroup>
    <RestorePackagesPath>$(MSBuildThisFileDirectory)packages\</RestorePackagesPath>
    <TDTeamId>329</TDTeamId>
    <TDClientID>443ffc71-4ea5-43d7-bbcc-7ec37758c83b</TDClientID>
    <TDAppKey>42664164ca0640e3b1a5fefb68d13f57</TDAppKey>
    <TranslatedFilesDirectory>langs\</TranslatedFilesDirectory>
    <TDPackageVersion>1.0.1.9</TDPackageVersion>
  </PropertyGroup>

  <ItemGroup>
    <InputTranslations Include="..\Xamarin.PropertyEditing\Properties\Resources.resx" />
  </ItemGroup>

  <UsingTask TaskName="MS.Internal.Touchdown.Build.Tasks.GetLocResources" AssemblyFile="$(RestorePackagesPath)MS.Internal.Touchdown.Build.Tasks\$(TDPackageVersion)\tools\MS.Internal.Touchdown.Build.Tasks.dll" />

  <ItemGroup>
    <PackageReference Include="MS.Internal.Touchdown.Build.Tasks" Version="$(TDPackageVersion)" />
  </ItemGroup>

  <Target Name="UpdateTranslations">
    <ItemGroup>
      <InputTranslationsWithMetadata Include="@(InputTranslations)">
        <ContainingDirectory>$([System.IO.Path]::GetDirectoryName('%(FullPath)'))\</ContainingDirectory>
        <!-- Walk up 1 directory *above* the place which contains the csproj
             The 'relative path' will now look like 'Xamarin.Designer/Resources/Translations.resx' which
             means all our 'relative paths' will be unique when we upload to the translation service -->
        <ProjectDir>$([System.IO.Directory]::GetParent('%(FullPath)').Parent.FullName)\</ProjectDir>
      </InputTranslationsWithMetadata>
    </ItemGroup>

    <MakeDir Directories="%(InputTranslationsWithMetadata.ContainingDirectory)$(TranslatedFilesDirectory)" />

    <GetLocResources
      Files="%(InputTranslationsWithMetadata.FullPath)"
      OutputPath="%(InputTranslationsWithMetadata.ContainingDirectory)$(TranslatedFilesDirectory)"
      ProjectDir="%(InputTranslationsWithMetadata.ProjectDir)"
      TeamId="$(TDTeamId)"
      ClientID="$(TDClientID)"
      AppKey="$(TDAppKey)"
      TraceEnabled="True" />
    <ItemGroup>
      <Translations Include="..\**\$(TranslatedFilesDirectory)**\*.resx" />
      <TranslationsWithMetadata Include="@(Translations)">
        <!-- The path looks like 'langs/en-GB/Translations.resx'. We want the 'en-GB' part -->
        <Lang>$([System.IO.Path]::GetFileName('$([System.IO.Path]::GetDirectoryName('%(FullPath)'))'))</Lang>
        <!-- Walk up three levels in the directory hierarchy so we can place these files beside the original -->
        <ContainingDirectory>$([System.IO.Directory]::GetParent('%(FullPath)').Parent.Parent.FullName)\</ContainingDirectory>
      </TranslationsWithMetadata>

    </ItemGroup>

    <Copy SourceFiles="@(TranslationsWithMetadata)" DestinationFiles="%(ContainingDirectory)%(FileName).%(Lang)%(Extension)" />
    <RemoveDir Directories="%(InputTranslationsWithMetadata.ContainingDirectory)$(TranslatedFilesDirectory)" />

  </Target>

  <Import Project="$(BuildDir)corebuild.targets" />
</Project>
